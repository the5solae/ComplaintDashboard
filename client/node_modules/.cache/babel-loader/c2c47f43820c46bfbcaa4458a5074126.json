{"ast":null,"code":"var _jsxFileName = \"/home/ikenna/Documents/Assessement/ComplaintDashboard/client/src/components/RetrieveComplaint/RetrieveComplaint.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../../constants/apiConstants';\nimport { withRouter } from \"react-router-dom\";\n\nfunction RetrieveComplaint(props) {\n  const [state, setState] = useState({\n    data: {}\n  });\n\n  const redirectToHome = () => {\n    props.updateTitle('Home');\n    props.history.push('/home');\n  };\n\n  const user = props.userLoggedIn; // const RetreieveInfo = async () => {   \n  //     const payload={\n  //         \"email\": user\n  //     }\n  //     axios.post(API_BASE_URL+'getcomplaints', payload)\n  //     .then(function (response) {\n  //         if(response.data.code === 200){\n  //             console.log(response.data.success)\n  //             props.showError(null)\n  //             console.log(state)\n  //             // return response.data.success\n  //         }else{\n  //             props.showError(\"Could not Get Complaint\");\n  //         }\n  //     })\n  //     .catch(function (error) {\n  //         console.log(error);\n  //     });\n  // }\n\n  useEffect(() => {\n    const payload = {\n      \"email\": user\n    };\n    axios.post(API_BASE_URL + 'getcomplaints', payload).then(function (response) {\n      if (response.data.code === 200) {\n        console.log(response.data.success);\n        props.showError(null);\n        setState({\n          data: response.data.success\n        });\n        console.log(state);\n      } else {\n        props.showError(\"Could not Get Complaint\");\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card col-12 col-lg-4 login-card mt-2 hv-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary btn-lg btn-block\",\n    onClick: () => redirectToHome(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group list-group-flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Title: \"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Business Unit:\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Location: \"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Complaint Description: \"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Complaint Status: \")));\n}\n\nexport default withRouter(RetrieveComplaint);","map":{"version":3,"sources":["/home/ikenna/Documents/Assessement/ComplaintDashboard/client/src/components/RetrieveComplaint/RetrieveComplaint.js"],"names":["React","useState","useEffect","axios","API_BASE_URL","withRouter","RetrieveComplaint","props","state","setState","data","redirectToHome","updateTitle","history","push","user","userLoggedIn","payload","post","then","response","code","console","log","success","showError","catch","error"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,8BAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B,QAAM,CAACC,KAAD,EAASC,QAAT,IAAqBR,QAAQ,CAAC;AAChCS,IAAAA,IAAI,EAAE;AAD0B,GAAD,CAAnC;;AAIA,QAAMC,cAAc,GAAG,MAAM;AACzBJ,IAAAA,KAAK,CAACK,WAAN,CAAkB,MAAlB;AACAL,IAAAA,KAAK,CAACM,OAAN,CAAcC,IAAd,CAAmB,OAAnB;AACH,GAHD;;AAIA,QAAMC,IAAI,GAAGR,KAAK,CAACS,YAAnB,CAT8B,CAW9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,OAAO,GAAC;AACV,eAASF;AADC,KAAd;AAGAZ,IAAAA,KAAK,CAACe,IAAN,CAAWd,YAAY,GAAC,eAAxB,EAAyCa,OAAzC,EACCE,IADD,CACM,UAAUC,QAAV,EAAoB;AACtB,UAAGA,QAAQ,CAACV,IAAT,CAAcW,IAAd,KAAuB,GAA1B,EAA8B;AAC1BC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACV,IAAT,CAAcc,OAA1B;AACAjB,QAAAA,KAAK,CAACkB,SAAN,CAAgB,IAAhB;AACAhB,QAAAA,QAAQ,CAAC;AAACC,UAAAA,IAAI,EAAEU,QAAQ,CAACV,IAAT,CAAcc;AAArB,SAAD,CAAR;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACH,OALD,MAKK;AACDD,QAAAA,KAAK,CAACkB,SAAN,CAAgB,yBAAhB;AACH;AACJ,KAVD,EAWCC,KAXD,CAWO,UAAUC,KAAV,EAAiB;AACpBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,KAbD;AAcH,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,gDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,kCAAhC;AAAmE,IAAA,OAAO,EAAE,MAAMhB,cAAc,EAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEE;AAAI,IAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAI,IAAA,SAAS,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAI,IAAA,SAAS,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAI,IAAA,SAAS,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAJF,eAKE;AAAI,IAAA,SAAS,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALF,CAFF,CADJ;AAYH;;AAED,eAAeN,UAAU,CAACC,iBAAD,CAAzB","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {API_BASE_URL} from '../../constants/apiConstants';\nimport { withRouter } from \"react-router-dom\";\n\nfunction RetrieveComplaint(props) {\n    const [state , setState] = useState({\n        data: {}\n        })\n\n    const redirectToHome = () => {\n        props.updateTitle('Home')\n        props.history.push('/home');\n    }\n    const user = props.userLoggedIn\n    \n    // const RetreieveInfo = async () => {   \n    //     const payload={\n    //         \"email\": user\n    //     }\n    //     axios.post(API_BASE_URL+'getcomplaints', payload)\n    //     .then(function (response) {\n    //         if(response.data.code === 200){\n    //             console.log(response.data.success)\n    //             props.showError(null)\n    //             console.log(state)\n    //             // return response.data.success\n                \n    //         }else{\n    //             props.showError(\"Could not Get Complaint\");\n    //         }\n    //     })\n    //     .catch(function (error) {\n    //         console.log(error);\n    //     });\n        \n    // }\n\n    useEffect(() => {\n        const payload={\n            \"email\": user\n        }\n        axios.post(API_BASE_URL+'getcomplaints', payload)\n        .then(function (response) {\n            if(response.data.code === 200){\n                console.log(response.data.success)\n                props.showError(null)\n                setState({data: response.data.success})\n                console.log(state)                \n            }else{\n                props.showError(\"Could not Get Complaint\");\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }, [])\n\n    return(\n        <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\n        <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\" onClick={() => redirectToHome()}>Back</button>\n          <ul className=\"list-group list-group-flush\">\n            <li className=\"list-group-item text-left\" >Title: </li>\n            <li className=\"list-group-item text-left\">Business Unit:</li>\n            <li className=\"list-group-item text-left\">Location: </li>\n            <li className=\"list-group-item text-left\">Complaint Description: </li>\n            <li className=\"list-group-item text-left\">Complaint Status: </li>\n        </ul>\n        </div>\n    )\n}\n\nexport default withRouter(RetrieveComplaint);"]},"metadata":{},"sourceType":"module"}